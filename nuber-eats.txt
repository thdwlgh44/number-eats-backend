#1. Setup
npm i
npm run start:dev
gitignore

#2. GraphQL
npm i @nestjs/graphql graphql-tools graphql apollo-server-express
=> !! 2023 5월 기준 exporess와 apollo를 사용하려면 다음 패키지를 설치
=> npm i @nestjs/graphql@^9 graphql@^15 apollo-server-express@^3
- entity: database model

#3. database
- TS와 nest.js에서 ORM을 사용: 객체-관계 매핑, sql문이 아닌 코드로 데이터베이스 통신
- 5432 / 1234
- database connect: npm install --save @nestjs/typeorm typeorm pg
- npm i --save @nestjs/config: dotenv 최상위
- npm i cross-env
- ignoreEnvFile: server에 deploy 할 때 환경변수 파일을 사용하지 않는다.
- joi: JS용 환경변수 유효성 검사 라이브러리
npm i joi

#4. TypeORM
- @Entity: TypeORM이 DB에 저장
- Active Record: DB와 상호작용하기 위한 패턴
extends BaseEntity
- Data Mapper: Nest.js+TypeORM에서 사용, getRepository() 사용해서 어디든 접근 가능하다는 장점
test & simulate
- Recap
app.module - TypeOrmModule - entity(Restaurant) => DB
restaurants.module - TypeOrmModule.forFeature([]): 특정 feature import
resolver - RestaurantService import 
service - @InjectRepository(entity): repository의 옵션들을 사용할 수 있게 된다.
- create Restaurants
- dto와 entity가 통합되어서 생성되지 않는 문제점을 어떻게 해결할까?
entity파일 하나로 모두 만들어보자. => Mappedtypes
paretType인 Restaurant가 ObjectType이고 childType이 InputType으로 서로 다르기 때문에 InputType을 2번째 args로 전달한다.
- update Restaurant
resolver - dto - service

#5. User
- module
nest g mo users
nest g mo common
- entity
id
createdAt
updatedAt
email
password
rold(client|owner|delivery)
- CRUD
create Account
Log In
See Profile
Edit Profile
- enum: 열거
- array or object return error
- hash: listener - entity에 무슨 일이 생길 때 실행
npm i bcrypt
npm i @types/bcrypt --dev-only

#6. authentication
npm i jsonwebtoken
npm i @types/jsonwebtoken --only-dev
JWT: token에 들어있는 정보를 누구나 알 수 있으므로 중요한 정보에는 적합하지 않음. 우리만이 유효한 인증을 할 수 있도록 해준다.
nest g mo jwt
static module: 어떠한 설정도 되어있지 않음
dynamic => static
nest g s jwt
client(Request) -> Middleware -> Route Handler
nest g mo auth
authentication: token으로 identity 확인
authorization: user가 어떤 일을 하기 전에 권한을 가지고 있는지 확인하는 과정

- authentication 과정
1) header에 token을 보낸다. http기술을 쓰기 위해 middleware를 만든다.
2) token을 decrpt, verify 하는 middleware을 거친다.
3) request object에 user를 추가한다. => r o는 graphql context 안으로 들어가게 되고 guard가 g c를 찾아 user 존재유무에 따라 true, false를 리턴한다.

- update가 undefined를 보내는 것을 방지하기 위하여 picType 사용하도록 함

#7.


#8.


#9.


#10.

#15. react router v6
recommend: 5.3.4 ver
npm i react-router-dom@5.3.4
강의 다 끝나고 다시 돌아오는 섹션
npx create-react-app nuber-eats-frontend --template=typescript
TailwindCSS
- 정형화된 룩, 형식이 없고 마치 오리지널 css로 만든 것 같음
- prod를 위한 build를 할 대 쓰지 않는 클래스들은 뺄 수 있다.
- npm install tailwindcss
- node.js 12이상에서만 적용 가능
- npm i tailwindcss postcss autoprefixer: 클래스 이름에 접두사 호환성을 추가
- postcss config file: tailwind를 일반 css로 빌드하기 위한 postcss config file 생성
- Create configuration file: npx tailwindcss init
- npm run tailwind:build
- npx tailwindcss -i ./src/input.css -o ./dist/output.css --watch
- npx tailwindcss -i ./src/styles/tailwind.css -o ./src/styles/styles.css --watch

Apollo Setup
- npm install @apollo/client graphql

React Router Dom
- npm install react-router-dom
- login / logout